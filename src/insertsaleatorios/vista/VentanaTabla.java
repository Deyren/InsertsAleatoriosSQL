/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package insertsaleatorios.vista;

import insertsaleatorios.Datos;
import insertsaleatorios.modelo.Tabla;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;

/**
 * Es el panel que representa una tabla y se muestra un panel por cada tabla que
 * se tenga. <br>
 *
 * @author Ruben
 */
public class VentanaTabla extends javax.swing.JPanel {

    /**
     * Tabla de la que recoge los datos a mostrar.
     *
     */
    private final Tabla suTabla;//Se le pasa al constructor
    /**
     * popup que aparece al hace click izquierdo sobre la vista.
     */
    private JPopupMenu elPopup;
    /**
     * Menu contenido dentro del popup anterior.<br>
     * Contiene el texto del popup y el evento click.<br>
     */
    private JMenuItem elMenuItem;

    /**
     * Creates new form VistaDeTabla.<br>
     *
     * La vista de una tabla desde el panel de tablas.<br>
     * Cada vista contiene una tabla de la que obtiene los datos.<br>
     *
     * @param suTabla
     * @param posicion
     */
    public VentanaTabla(Tabla suTabla, Point posicion) {
        initComponents(); 
       //textoNombreDeLaTabla.setFont(Font.decode("UTF-8"));
      // textoNombreDeLaTabla.setFont(new java.awt.Font("Amstrad CPC464", 1, 18)); // NOI18N
        setMinimumSize(Datos.tamañoDeVentanaDeTabla);
        textoNombreDeLaTabla.setText(suTabla.getNombre());
        textoInfo.setText("Columnas: "+suTabla.getColumnas().size());
        actualizarTamaño();
      
        setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.MOVE_CURSOR));
        setLocation(posicion);
       
        //setSize(Datos.tamañoDeVentanaDeTabla);
        //setMinimumSize(new Dimension(80,100));
        // setMaximumSize(new Dimension(200, 100));
        this.suTabla = suTabla;
        setBackground(new Color(20, 40, 240));//Color del fondo del titulo de la tabla
        textoNombreDeLaTabla.setEnabled(false);
    }

    /**
     * Actualiza el tamaño del panel en funcion del tamaño del nombre de la tabla. 
     */
    private void actualizarTamaño(){   
            int letras=10;
            if(textoNombreDeLaTabla.getText().length()>letras){
                letras=textoNombreDeLaTabla.getText().length();
            }
            
          Dimension dimm=new Dimension(letras*10, Datos.tamañoDeVentanaDeTabla.height);
          textoNombreDeLaTabla.setSize(dimm.width,dimm.height/2);
       
          setSize(dimm);
          updateUI();
    }
    
    private void mostrarPopup(java.awt.event.MouseEvent evt) {
        if (elPopup == null || elMenuItem == null) {
            elPopup = new JPopupMenu();
            elMenuItem = new JMenuItem("Editar " + suTabla.getNombre());
            elPopup.setLocation(evt.getLocationOnScreen());
            elMenuItem.addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent e) {//Se pulsa sobre editar                        
                    PanelDeColumnas.getInstance(suTabla);
                    //VentanaPrincipal.setPanelPrincipal(pacol);
                    // GestorVentanaPrincipal.establecerPanelDeFondo(pacol);
                    elPopup.setVisible(false);
                    elPopup = null;
                    elMenuItem = null;
                    System.gc();
                }
            });
            elPopup.add(elMenuItem);
            elPopup.setVisible(true);
        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textoNombreDeLaTabla = new javax.swing.JTextField();
        textoInfo = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setName(""); // NOI18N
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        textoNombreDeLaTabla.setFont(new java.awt.Font("Liberation Sans Narrow", 1, 18)); // NOI18N
        textoNombreDeLaTabla.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textoNombreDeLaTabla.setAutoscrolls(false);
        textoNombreDeLaTabla.setSelectionColor(new java.awt.Color(0, 102, 255));
        textoNombreDeLaTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textoNombreDeLaTablaMouseClicked(evt);
            }
        });
        textoNombreDeLaTabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoNombreDeLaTablaKeyPressed(evt);
            }
        });

        textoInfo.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        textoInfo.setText("Columnas:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textoNombreDeLaTabla, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
            .addComponent(textoInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(textoNombreDeLaTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textoInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {//Raton derecho pulsado sobre la vista de la tabla
             if( ! textoNombreDeLaTabla.isEnabled()){// Solo muestra el popup cuando no se esta editando el texto.
                mostrarPopup(evt);
          }else{
                 //Si el texto se esta editando, le pone el foco y selecciona todo el texto.
                 textoNombreDeLaTabla.requestFocus();
                 textoNombreDeLaTabla.setSelectionStart(0);
             }
        } else if (evt.getButton() == MouseEvent.BUTTON1
                || evt.getButton() == MouseEvent.BUTTON2) {
            if (elPopup != null) {
                elPopup.setVisible(false);
                elPopup = null;
            }

        }


    }//GEN-LAST:event_formMouseReleased
    /**
     *
     * @param evt
     */
    private void textoNombreDeLaTablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNombreDeLaTablaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { //Si se pulsa ENTER...
            if (textoNombreDeLaTabla.isEnabled()) {               
                textoNombreDeLaTabla.setEnabled(false);
                suTabla.setNombre(textoNombreDeLaTabla.getText().trim());
            }
             actualizarTamaño();
        }
         
        
    }//GEN-LAST:event_textoNombreDeLaTablaKeyPressed

    
    
    
    private void textoNombreDeLaTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoNombreDeLaTablaMouseClicked
        // TODO add your handling code here:

        if (evt.getButton() == MouseEvent.BUTTON3) {//Raton derecho pulsado sobre la vista de la tabla
          if( ! textoNombreDeLaTabla.isEnabled()){// Solo muestra el popup cuando no se esta editando el texto.
                mostrarPopup(evt);
          }
          
        } else if (evt.getButton() == MouseEvent.BUTTON1
                || evt.getButton() == MouseEvent.BUTTON2) {
            if (evt.getClickCount() == 2) { // Boton 1 o 2 pulsado dos veces
                if (!textoNombreDeLaTabla.isEnabled()) {
                    textoNombreDeLaTabla.setEnabled(true);
                    textoNombreDeLaTabla.setSelectionStart(0);//Hace que aparezca todo el texto seleccionado.
                }
            }

            if (elPopup != null) {
                elPopup.setVisible(false);
                elPopup = null;
            }

        }


    }//GEN-LAST:event_textoNombreDeLaTablaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel textoInfo;
    private javax.swing.JTextField textoNombreDeLaTabla;
    // End of variables declaration//GEN-END:variables
}
